<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小程序开发</title>
      <link href="/2023/08/19/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
      <url>/2023/08/19/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序知识总结"><a class="markdownIt-Anchor" href="#小程序知识总结">#</a> 小程序知识总结</h1><h2 id="1-小程序开发流程"><a class="markdownIt-Anchor" href="#1-小程序开发流程">#</a> 1、小程序开发流程</h2><ol><li>首先在微信公众平台注册小程序账号，获取 appID</li><li>填写小程序基本信息，并下载微信开发者工具</li><li>使用小程序 appID 创建小程序项目，并编写完善项目</li><li>上传小程序项目为测试版，由测试人员测试并修改 BUG</li><li>测试完成后，在微信公众平台提交发布，人工审核通过即可</li></ol><h2 id="2-小程序的优劣势"><a class="markdownIt-Anchor" href="#2-小程序的优劣势">#</a> 2、小程序的优劣势</h2><h3 id="1优势"><a class="markdownIt-Anchor" href="#1优势">#</a> （1）优势</h3><ul><li>容易上手，基础组件库比较全，基本上不需要考虑兼容问题；</li><li>即用即走，不用安装，省流量，省安装时间，不占用桌面</li><li>依托微信流量，天生推广传播优势</li><li>开发成本比 App 低</li></ul><h3 id="2缺点"><a class="markdownIt-Anchor" href="#2缺点">#</a> （2）缺点</h3><ul><li>样式单一，部分组件已经是成型了的，样式不可修改，例如：幻灯片、导航入口</li><li>相对传统 App 要深很多</li><li>限制较多，页面大小不能超过 2M。不能打开超过 5 个层级的页面</li></ul><h2 id="3-小程序的生命周期"><a class="markdownIt-Anchor" href="#3-小程序的生命周期">#</a> 3、小程序的生命周期</h2><h3 id="1应用生命周期"><a class="markdownIt-Anchor" href="#1应用生命周期">#</a> （1）应用生命周期</h3><ul><li>onLauch：应用初始化完成触发，全局只触发一次</li><li>onShow：应用启动，或从后台进入前台触发</li><li>onHide：应用从前台进入后台触发</li><li>onError：应用报错时触发</li></ul><h3 id="2页面生命周期"><a class="markdownIt-Anchor" href="#2页面生命周期">#</a> （2）页面生命周期</h3><ul><li>onLoad：页面加载时触发，只会调用一次，一般用来发送数据请求，可获取当前页面路径中的参数。</li><li>onReady：页面初次染完成时触发，只会调用一次，代表页面已可和视图层进行交互。获取节点信息</li><li>onShow：页面显示 / 切入前台时触发</li><li>onHide：页面隐藏 / 切入后台时触发，如底部 tab 切换到其他页面或小程序切入后台触发</li><li>onUnload：页面卸载时触发，如 redirectTo 或 navigateBack 到其他页面时</li><li>onPullDownRefresh：页面下拉刷新时执行</li><li>onReachBottom：页面触底时执行</li><li>onShareAppMessage：页面被用户分享时执行</li></ul><h2 id="4-页面路由"><a class="markdownIt-Anchor" href="#4-页面路由">#</a> 4、页面路由</h2><h3 id="1页面栈"><a class="markdownIt-Anchor" href="#1页面栈">#</a> （1）页面栈</h3><table><thead><tr><th style="text-align:left">路由方式</th><th style="text-align:left">页面栈表现</th></tr></thead><tbody><tr><td style="text-align:left">初始化</td><td style="text-align:left">新页面入栈</td></tr><tr><td style="text-align:left">打开新页面</td><td style="text-align:left">新页面入栈</td></tr><tr><td style="text-align:left">页面重定向</td><td style="text-align:left">当前页面出栈，新页面入栈</td></tr><tr><td style="text-align:left">页面返回</td><td style="text-align:left">页面不断出栈，直到目标返回页</td></tr><tr><td style="text-align:left">Tab 切换</td><td style="text-align:left">页面全部出栈，只留下新的 Tab 页面</td></tr><tr><td style="text-align:left">重加载</td><td style="text-align:left">页面全部出栈，只留下新的页面</td></tr></tbody></table><h3 id="2路由方式"><a class="markdownIt-Anchor" href="#2路由方式">#</a> （2）路由方式</h3><table><thead><tr><th style="text-align:left">路由方式</th><th style="text-align:left">触发时机</th><th style="text-align:left">路由前页面</th><th style="text-align:left">路由后页面</th></tr></thead><tbody><tr><td style="text-align:left">初始化</td><td style="text-align:left">小程序打开的第一个页面</td><td style="text-align:left"></td><td style="text-align:left">onLoad, onShow</td></tr><tr><td style="text-align:left">打开新页面</td><td style="text-align:left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html">wx.navigateTo</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"> <code>navigator</code> </a></td><td style="text-align:left">onHide</td><td style="text-align:left">onLoad, onShow</td></tr><tr><td style="text-align:left">页面重定向</td><td style="text-align:left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html">wx.redirectTo</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"> <code>navigator</code> </a></td><td style="text-align:left">onUnload</td><td style="text-align:left">onLoad, onShow</td></tr><tr><td style="text-align:left">页面返回</td><td style="text-align:left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">wx.navigateBack</a> 使用组件<a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"> <code>navigator</code> </a> 用户按左上角返回按钮</td><td style="text-align:left">onUnload</td><td style="text-align:left">onShow</td></tr><tr><td style="text-align:left">Tab 切换</td><td style="text-align:left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html">wx.switchTab</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"> <code>navigator</code> </a> 用户切换 Tab</td><td style="text-align:left"></td><td style="text-align:left">各种情况请参考下表</td></tr><tr><td style="text-align:left">重启动</td><td style="text-align:left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html">wx.reLaunch</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"> <code>navigator</code> </a></td><td style="text-align:left">onUnload</td><td style="text-align:left">onLoad, onShow</td></tr></tbody></table><p>Tab 切换对应的生命周期（以 A、B 页面为 Tabbar 页面，C 是从 A 页面打开的页面，D 页面是从 C 页面打开的页面为例）：</p><table><thead><tr><th style="text-align:left">当前页面</th><th style="text-align:left">路由后页面</th><th style="text-align:left">触发的生命周期（按顺序）</th></tr></thead><tbody><tr><td style="text-align:left">A</td><td style="text-align:left">A</td><td style="text-align:left">Nothing happend</td></tr><tr><td style="text-align:left">A</td><td style="text-align:left">B</td><td style="text-align:left">A.onHide(), B.onLoad(), B.onShow()</td></tr><tr><td style="text-align:left">A</td><td style="text-align:left">B（再次打开）</td><td style="text-align:left">A.onHide(), B.onShow()</td></tr><tr><td style="text-align:left">C</td><td style="text-align:left">A</td><td style="text-align:left">C.onUnload(), A.onShow()</td></tr><tr><td style="text-align:left">C</td><td style="text-align:left">B</td><td style="text-align:left">C.onUnload(), B.onLoad(), B.onShow()</td></tr><tr><td style="text-align:left">D</td><td style="text-align:left">B</td><td style="text-align:left">D.onUnload(), C.onUnload(), B.onLoad(), B.onShow()</td></tr><tr><td style="text-align:left">D（从转发进入）</td><td style="text-align:left">A</td><td style="text-align:left">D.onUnload(), A.onLoad(), A.onShow()</td></tr><tr><td style="text-align:left">D（从转发进入）</td><td style="text-align:left">B</td><td style="text-align:left">D.onUnload(), B.onLoad(), B.onShow()</td></tr></tbody></table><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项">#</a> 注意事项</h4><ul><li><code>navigateTo</code> ,  <code>redirectTo</code>  只能打开非 tabBar 页面。</li><li><code>switchTab</code>  只能打开 tabBar 页面。</li><li><code>reLaunch</code>  可以打开任意页面。</li><li>页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。</li><li>调用页面路由带的参数可以在目标页面的 <code>onLoad</code>  中获取。</li></ul><h2 id="5-导航"><a class="markdownIt-Anchor" href="#5-导航">#</a> 5、导航</h2><h3 id="1编程式导航"><a class="markdownIt-Anchor" href="#1编程式导航">#</a> （1）编程式导航</h3><ul><li><p>1、wx.switchTab(Object object)</p><p>功能描述:</p><p>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>2、wx.reLaunch(Object object)</p><p>功能描述：</p><p>关闭所有页面，打开到应用内的某个页面，可以跳转到任何一个页面，对比 navigateTo (), 保留当前页面再跳转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">reLaunch</span>(&#123;</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>3、wx.redirectTo(Object object)</p><p>功能描述</p><p>关闭当前页面，跳转到应用内的某个页面，但是不允许跳转到 tabbar 页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>4、wx.navigateTo(Object object)</p><p>功能描述：</p><p>保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">wx.navigateBack</a> 可以返回到原页面。</p><p>对于页面不是很多的小程序，通常推荐使用 wx.navigateTo 进行跳转，以便返回页面，以提高加载速度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>5、wx.navigateBack(Object object)</p><p>功能描述</p><p>关闭当前页面，返回上一页面或多级页面。可通过 <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/getCurrentPages.html">getCurrentPages</a> 获取当前的页面栈，决定需要返回几层</p><p>小程序的页面栈最多 10 层</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateBack</span>()</span><br></pre></td></tr></table></figure></li><li><p>6、跳转到其他小程序，需要配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateBackMiniProgram</span>(&#123;</span><br><span class="line">      <span class="attr">appId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">extraData</span>: &#123;</span><br><span class="line">        <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">envVersion</span>: <span class="string">&#x27;develop&#x27;</span>,</span><br><span class="line">      <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line"><span class="comment">//打开成功</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2声明式导航"><a class="markdownIt-Anchor" href="#2声明式导航">#</a> （2）声明式导航</h3><table><thead><tr><th style="text-align:left">open-type 合法值</th><th style="text-align:left">说明</th><th style="text-align:left">最低版本</th></tr></thead><tbody><tr><td style="text-align:left">navigate</td><td style="text-align:left">对应 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html">wx.navigateTo</a> 或 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/navigate/wx.navigateToMiniProgram.html">wx.navigateToMiniProgram</a> 的功能</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">redirect</td><td style="text-align:left">对应 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html">wx.redirectTo</a> 的功能</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">switchTab</td><td style="text-align:left">对应 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html">wx.switchTab</a> 的功能</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">reLaunch</td><td style="text-align:left">对应 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html">wx.reLaunch</a> 的功能</td><td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">1.1.0</a></td></tr><tr><td style="text-align:left">navigateBack</td><td style="text-align:left">对应 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">wx.navigateBack</a> 或 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/navigate/wx.navigateBackMiniProgram.html">wx.navigateBackMiniProgram</a> （基础库 2.24.4 版本支持）的功能</td><td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">1.1.0</a></td></tr><tr><td style="text-align:left">exit</td><td style="text-align:left">退出小程序， <code>target=&quot;miniProgram&quot;</code>  时生效</td><td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.1.0</a></td></tr></tbody></table><h2 id="6-bindtap和catchtap的区别是什么"><a class="markdownIt-Anchor" href="#6-bindtap和catchtap的区别是什么">#</a> 6、bindtap 和 catchtap 的区别是什么？</h2><ul><li><strong>相同点</strong>：首先他们都是作为点击事件函数，就是点击时触发。在这个作用上他们是一样的，可以不做区分</li><li><strong>不同点</strong>：他们的不同点主要是 bindtap 是不会阻止冒泡事件的，catchtap 是阻止冒泡的</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/18/hello-world/"/>
      <url>/2023/08/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>这是我的第一篇博客，开启我的代码编写之旅</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
